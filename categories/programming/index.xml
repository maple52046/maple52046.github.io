<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on 世界的盡頭</title>
    <link>https://maple52046.github.io/categories/programming/</link>
    <description>Recent content in Programming on 世界的盡頭</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hant</language>
    <lastBuildDate>Sat, 21 Sep 2024 02:08:09 +0800</lastBuildDate>
    <atom:link href="https://maple52046.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flutter ReorderableListView</title>
      <link>https://maple52046.github.io/posts/flutter-reorderablelistview/</link>
      <pubDate>Sat, 21 Sep 2024 02:08:09 +0800</pubDate>
      <guid>https://maple52046.github.io/posts/flutter-reorderablelistview/</guid>
      <description>&lt;h1 id=&#34;使用-reorderablelist-解決-bloc-在-listview-中頻繁的關閉與創建問題&#34;&gt;使用 ReorderableList 解決 Bloc 在 ListView 中頻繁的關閉與創建問題&lt;/h1&gt;&#xA;&lt;p&gt;最近在開發 Flutter app 時遇到了一個問題：當 &lt;code&gt;ListView&lt;/code&gt; 中，每個 child 都使用 &lt;code&gt;BlocProvider&lt;/code&gt; ，例如:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MyListView&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; StatelessWidget {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt;override&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Widget build(BuildContext context) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; BlocBuilder&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;MyCubit, MyState&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      builder: (_, state) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ListView.builder(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          itemCount: state.length,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          itemBuilder: (context, index) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; BlocProvider(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              create: (_) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; MyCubit(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              child: ListTile(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                key: ValueKey(state[index]),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                title: Text(state[index].title),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              ),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果列表的順序變更，child bloc 會將頻繁地被關閉與重新創建。此時會導致所有的 child 發生 &lt;code&gt;emit error&lt;/code&gt;：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ERROR: flutter/runtime/dart_vm_initializer.cc(41)] Unhandled Exception: Bad state: Cannot emit new states after calling close&#xA;#0  BlocBase.emit (package:bloc/src/bloc_base.dart:97:9)&#xA;#1  MyCubit.fetchData.&amp;lt;anonymous closure&amp;gt; (package: myapp/features/hello/presentation/blocs/cubit.dart:203:13)&#xA;#2  GreetingRepository.fetchData(package:myapp/features/hello/infrastructure/repositories.dart:167:20)&#xA;‹asynchronous suspension&amp;gt;&#xA;#3  GreetingRepository.fetch.&amp;lt;anonymous closure (package:myapp/features/hello/infrastructure/repositories.dart:60:9)&#xA;&amp;lt;asynchronous suspension&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即便在每個 &lt;code&gt;child&lt;/code&gt; 上增加了唯一的 &lt;code&gt;key&lt;/code&gt;，也無法避免這個問題。&lt;/p&gt;</description>
    </item>
    <item>
      <title>解決在 Flutter 使用 Catcher 時遇到 WidgetsFlutterBinding 初始化的問題</title>
      <link>https://maple52046.github.io/posts/solve-widgetsflutterbinding-issue-in-flutter-with-catcher/</link>
      <pubDate>Fri, 29 Dec 2023 21:41:53 +0800</pubDate>
      <guid>https://maple52046.github.io/posts/solve-widgetsflutterbinding-issue-in-flutter-with-catcher/</guid>
      <description>&lt;p&gt;最近引入 &lt;a href=&#34;https://github.com/jhomlala/catcher&#34;&gt;Catcher&lt;/a&gt; 來搜集 app 發生的錯誤訊息。按照 github 上的範例修改了 main function，初始化 Catcher:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; main() &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  WidgetsFlutterBinding.ensureInitialized();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Catcher(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    debugConfig: CatcherOptions(SilentReportMode(), [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ConsoleHandler(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        enableApplicationParameters: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        enableDeviceParameters: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        enableCustomParameters: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        enableStackTrace: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    releaseConfig: CatcherOptions(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      SilentReportMode(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        HttpHandler(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          HttpRequestType.post,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          Uri.parse(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://x.y.z&amp;#39;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          enableApplicationParameters: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          enableCustomParameters: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          enableDeviceParameters: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          enableStackTrace: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    runAppFunction: initApp,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    navigatorKey: myRootNavKey,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Future&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; initApp() &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;/*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    此處省略一萬個 sdk 初始化步驟 .......&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;  */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  runApp(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; RootApp());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果運行時 console 顯示錯誤：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;flutter: [2023-12-29 20:47:21.680324 | Catcher | INFO] Setup localization lazily!&#xA;flutter: [2023-12-29 20:47:21.694254 | Catcher | INFO] ============================ CATCHER LOG ============================&#xA;flutter: [2023-12-29 20:47:21.694391 | Catcher | INFO] Crash occurred on 2023-12-29 20:47:21.687161&#xA;flutter: [2023-12-29 20:47:21.694430 | Catcher | INFO]&#xA;flutter: [2023-12-29 20:47:21.694508 | Catcher | INFO] ---------- ERROR ----------&#xA;flutter: [2023-12-29 20:47:21.694635 | Catcher | INFO] Zone mismatch.&#xA;The Flutter bindings were initialized in a different zone than is now being used. This will likely cause confusion and bugs as any zone-specific configuration will inconsistently use the configuration of the original binding initialization zone or this zone based on hard-to-predict factors such as which zone was active when a particular callback was set.&#xA;It is important to use the same zone when calling `ensureInitialized` on the binding as when calling `runApp` later.&#xA;To make this warning fatal, set BindingBase.debugZoneErrorsAreFatal to true before the bindings are initialized (i.e. as the first statement in `void main() { }`).&#xA;flutter: [2023-12-29 20:47:21.694679 | Catcher | INFO]&#xA;flutter: [2023-12-29 20:47:21.694899 | Catcher | INFO] ------- STACK TRACE -------&#xA;flutter: [2023-12-29 20:47:21.695005 | Catcher | INFO] #0      BindingBase.debugCheckZone.&amp;lt;anonymous closure&amp;gt; (package:flutter/src/foundation/binding.dart:503:29)&#xA;flutter: [2023-12-29 20:47:21.695041 | Catcher | INFO] #1      BindingBase.debugCheckZone (package:flutter/src/foundation/binding.dart:508:6)&#xA;flutter: [2023-12-29 20:47:21.695076 | Catcher | INFO] #2      runApp (package:flutter/src/widgets/binding.dart:1093:18)&#xA;flutter: [2023-12-29 20:47:21.695120 | Catcher | INFO] #3      initApp (package:arena/main.dart:225:3)&#xA;flutter: [2023-12-29 20:47:21.695152 | Catcher | INFO] &amp;lt;asynchronous suspension&amp;gt;&#xA;flutter: [2023-12-29 20:47:21.695183 | Catcher | INFO] #4      main.&amp;lt;anonymous closure&amp;gt;.&amp;lt;anonymous closure&amp;gt; (package:arena/main.dart:108:37)&#xA;flutter: [2023-12-29 20:47:21.695213 | Catcher | INFO] &amp;lt;asynchronous suspension&amp;gt;&#xA;flutter: [2023-12-29 20:47:21.695270 | Catcher | INFO]&#xA;flutter: [2023-12-29 20:47:21.695330 | Catcher | INFO] ======================================================================&#xA;flutter: [2023-12-29 20:47:21.695767 | Catcher | INFO] Report result: true&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>在 Flutter 中使用 NestedScrollView 與 CustomScrollView</title>
      <link>https://maple52046.github.io/posts/using-nestedscrollview-in-flutter/</link>
      <pubDate>Fri, 01 Jul 2022 19:30:23 +0800</pubDate>
      <guid>https://maple52046.github.io/posts/using-nestedscrollview-in-flutter/</guid>
      <description>&lt;p&gt;最近在修改 app 的個人頁，遇到的需求：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Tab bar 切出圓角&lt;/li&gt;&#xA;&lt;li&gt;Tab bar 可以滑動，滑到 app bar 的時候固定住&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;用文字說不太清楚，下面直接看圖：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/CxZ6jxL.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;頁面的 components 有：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;App bar&lt;/li&gt;&#xA;&lt;li&gt;個人資訊區&lt;/li&gt;&#xA;&lt;li&gt;Tab bar&lt;/li&gt;&#xA;&lt;li&gt;Tab view&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Tab view 裡是可滾動的內容, 這裡放了兩種類型：grid 與 list。&#xA;當用戶向上滑動時，app bar 固定不動，tab bar 往上滑動到 tab bar 時固定不動，下方 tab view 保持可滑動。如下圖：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/o63DCh9.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>編譯 Flutter APK</title>
      <link>https://maple52046.github.io/posts/compile-flutter-apk/</link>
      <pubDate>Fri, 10 Jun 2022 10:12:20 +0800</pubDate>
      <guid>https://maple52046.github.io/posts/compile-flutter-apk/</guid>
      <description>&lt;p&gt;本文主要紀錄使用 flutter 編譯 app apk 時遇到的問題與解法。&lt;/p&gt;&#xA;&lt;p&gt;版本資訊:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;&lt;thead&gt;&#xA;&lt;tr&gt;&#xA;&lt;th style=&#34;text-align:left&#34;&gt;#&lt;/th&gt;&#xA;&lt;th style=&#34;text-align:left&#34;&gt;Version&lt;/th&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/thead&gt;&#xA;&lt;tbody&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;Flutter&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;3.0.1&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;Host OS&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;MacOS Big Sur (11.3.1)&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;Android Studio&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;2020.3 (AI-203.7717.56.2031.7678000)&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;Android Platform Tool&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;r33.0.2&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;OpenJDK&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;18.0.1.1&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;tr&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;Android (phone)&lt;/td&gt;&#xA;&lt;td style=&#34;text-align:left&#34;&gt;11&lt;/td&gt;&#xA;&lt;/tr&gt;&#xA;&lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>OpenIM 整合(踩坑)筆記 01</title>
      <link>https://maple52046.github.io/posts/openim-integration-notes-01/</link>
      <pubDate>Wed, 25 May 2022 18:40:10 +0800</pubDate>
      <guid>https://maple52046.github.io/posts/openim-integration-notes-01/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://doc.rentsoft.cn/#/introduce/production_introduce&#34;&gt;OpenIM&lt;/a&gt; 號稱是由一群前微信等技術專家一起出來打造的開源 IM 系統。撇開政治不談，個人覺得微信在 IM 領域確實是佼佼者，因此決定整合 OpenIM 到現有的產品中，以減少浪費時間重複造輪子。&lt;/p&gt;&#xA;&lt;p&gt;本篇目標是串連原有的帳號系統與 OpenIM 的帳號系統，完成 &lt;strong&gt;自動註冊用戶到 OpenIM&lt;/strong&gt; (下圖中的第 3 ~ 4 步驟)。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://doc.rentsoft.cn/images/server-register.png&#34; alt=&#34;Open-IM用户注册&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>在 Flutter MaterialApp 中使用指定顏色</title>
      <link>https://maple52046.github.io/posts/use-specific-color-on-the-flutter-material-app/</link>
      <pubDate>Thu, 28 Oct 2021 20:36:27 +0800</pubDate>
      <guid>https://maple52046.github.io/posts/use-specific-color-on-the-flutter-material-app/</guid>
      <description>&lt;p&gt;使用 Flutter MaterialApp 時，如果直接使用 &lt;code&gt;Color.fromRGBO&lt;/code&gt; 指定 ThemeData 的 &lt;code&gt;primarySwatch&lt;/code&gt; 會出現類型錯誤。這是因為 &lt;code&gt;primarySwatch&lt;/code&gt; 接收的類型是 &lt;code&gt;MaterialColor&lt;/code&gt; 而不是 &lt;code&gt;Color&lt;/code&gt;：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/8oO6cvG.png&#34; alt=&#34;Imgur&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cross-compile for OpenWRT</title>
      <link>https://maple52046.github.io/posts/cross-compile-for-openwrt/</link>
      <pubDate>Thu, 14 May 2015 09:55:00 +0000</pubDate>
      <guid>https://maple52046.github.io/posts/cross-compile-for-openwrt/</guid>
      <description>&lt;p&gt;這是一個實驗，在 Ubuntu 上編譯可以在 OpenWRT 上運行的程式。&#xA;參考並修改別人的方式，完成了幾個簡單的範例。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;編譯環境：&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Operating System: Ubuntu 14.04 x64&lt;/li&gt;&#xA;&lt;li&gt;OpenWRT version: 14.07&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
